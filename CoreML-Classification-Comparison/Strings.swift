// Generated by aaa string tool. Do _not_ modify.

import Foundation

// swiftlint:disable line_length
public struct Strings {

    public struct Network {
        static let errorGeneric = Strings.localized("network_error_generic", value: "An error has occurred.")
        static let errorLoadingFailed = Strings.localized("network_error_loading_failed", value: "Could not load data. (Code %1$@)")
        static let errorNoConnection = Strings.localized("network_error_no_connection", value: "No network connection. Please try again later.")
        static let errorPostingFailed = Strings.localized("network_error_posting_failed", value: "Data could not be transferred. (Code %1$@)")
        static let errorWrongCredentials = Strings.localized("network_error_wrong_credentials", value: "You entered an incorrect username or a wrong password. Please try again.")
        static let errorActionDisabled = Strings.localized("network_error_action_disabled", value: "The Action is already running.")
        static let errorFirestoreSetData = Strings.localized("firestore_error_setData", value: "Error during firestore saving.")
    }

    public struct ImagesViewController {
        static let realmTitle = Strings.localized("images_realm_title", value: "Database Image Search")
        static let flickrTitle = Strings.localized("images_flickr_title", value: "Flirckr Image Search")
        static let emptyViewDescription = Strings.localized("emtpy_view_description", value: "Enter tags into the search bar to find images. At the moment there are no pictures found.")
    }

    public struct Alert {
        static let ok = Strings.localized("Shared.buttons.ok", value: "OK")
        static let confirm = Strings.localized("Shared.buttons.confirm", value: "Confirm")
        static let cancel = Strings.localized("Shared.buttons.cancel", value: "Cancel")
        static let save = Strings.localized("Shared.buttons.save", value: "Save")
        static let discard = Strings.localized("Shared.buttons.discard", value: "Discard")
        static let delete = Strings.localized("Shared.buttons.delete", value: "Delete")
        static let settings = Strings.localized("Shared.buttons.settings", value: "Settings")
        static let library = Strings.localized("Shared.titles.library", value: "Library")
        static let camera = Strings.localized("Shared.titles.camera", value: "Camera")
        static let assume = Strings.localized("Shared.buttons.assume", value: "Assume")
    }

    // settings this closure allows you to use a custom localization provider, such as OneSky over-the-air
    // by default, NSLocalizedString will load the strings from the main bundle's Localizable.strings file
    public static var customLocalizationClosure: ((String, String?, Bundle, String, String) -> String)?

    public static func localized(_ key: String, tableName: String? = nil, bundle: Bundle = Bundle.main, value: String, comment: String = "") -> String {
        if let closure = Strings.customLocalizationClosure {
            return closure(key, tableName, bundle, value, comment)
        } else {
            return NSLocalizedString(key, tableName: tableName, bundle: bundle, value: value, comment: comment)
        }
    }
}
